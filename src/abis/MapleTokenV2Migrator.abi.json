{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oldToken_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newToken_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "migrate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "migrate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oldToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c060405234801561001057600080fd5b5060405161069a38038061069a83398101604081905261002f916101a2565b816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561006857600080fd5b505afa15801561007c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100a091906101d5565b60ff16816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156100dc57600080fd5b505afa1580156100f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011491906101d5565b60ff16146101685760405162461bcd60e51b815260206004820152601460248201527f4d3a433a444543494d414c5f4d49534d41544348000000000000000000000000604482015260640160405180910390fd5b6001600160601b0319606092831b811660a052911b166080526101ff565b80516001600160a01b038116811461019d57600080fd5b919050565b600080604083850312156101b557600080fd5b6101be83610186565b91506101cc60208401610186565b90509250929050565b6000602082840312156101e757600080fd5b815160ff811681146101f857600080fd5b9392505050565b60805160601c60a05160601c61046461023660003960008181607e015261013901526000818160c101526101b101526104646000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063454b060814610051578063ad68ebf714610066578063b31c710a14610079578063c42bd05a146100bc575b600080fd5b61006461005f3660046103da565b6100e3565b005b610064610074366004610379565b6100f0565b6100a07f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b6100a07f000000000000000000000000000000000000000000000000000000000000000081565b6100ed33826100f0565b50565b806101345760405162461bcd60e51b815260206004820152600f60248201526e134e934e96915493d7d05353d55395608a1b60448201526064015b60405180910390fd5b6101607f000000000000000000000000000000000000000000000000000000000000000083308461021d565b6101ac5760405162461bcd60e51b815260206004820152601860248201527f4d3a4d3a5452414e534645525f46524f4d5f4641494c45440000000000000000604482015260640161012b565b6101d77f00000000000000000000000000000000000000000000000000000000000000008383610294565b6102195760405162461bcd60e51b8152602060048201526013602482015272134e934e9514905394d1915497d19052531151606a1b604482015260640161012b565b5050565b6040516001600160a01b038085166024830152831660448201526064810182905260009061028b9086906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526102cf565b95945050505050565b6040516001600160a01b0383166024820152604481018290526000906102c790859063a9059cbb60e01b90606401610254565b949350505050565b60006001600160a01b0383163b6102e857506000610373565b6060836001600160a01b03168360405161030291906103f3565b6000604051808303816000865af19150503d806000811461033f576040519150601f19603f3d011682016040523d82523d6000602084013e610344565b606091505b50909250905081801561036f57508051158061036f57508080602001905181019061036f91906103b1565b9150505b92915050565b6000806040838503121561038c57600080fd5b82356001600160a01b03811681146103a357600080fd5b946020939093013593505050565b6000602082840312156103c357600080fd5b815180151581146103d357600080fd5b9392505050565b6000602082840312156103ec57600080fd5b5035919050565b6000825160005b8181101561041457602081860181015185830152016103fa565b81811115610423576000828501525b50919091019291505056fea2646970667358221220edf338a79736b47ea6b604c5b8ce4e9cd5f02a611803cd02eead9c138bd86e4464736f6c63430008070033",
    "sourceMap": "205:825:0:-:0;;;309:229;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;424:9;-1:-1:-1;;;;;413:30:0;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;377:68;;388:9;-1:-1:-1;;;;;377:30:0;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:68;;;369:101;;;;-1:-1:-1;;;369:101:0;;974:2:4;369:101:0;;;956:21:4;1013:2;993:18;;;986:30;1052:22;1032:18;;;1025:50;1092:18;;369:101:0;;;;;;;;-1:-1:-1;;;;;;481:20:0;;;;;;;;511;;;;;205:825;;14:177:4;93:13;;-1:-1:-1;;;;;135:31:4;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:273::-;562:6;615:2;603:9;594:7;590:23;586:32;583:52;;;631:1;628;621:12;583:52;663:9;657:16;713:4;706:5;702:16;695:5;692:27;682:55;;733:1;730;723:12;682:55;756:5;494:273;-1:-1:-1;;;494:273:4:o;772:344::-;205:825:0;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063454b060814610051578063ad68ebf714610066578063b31c710a14610079578063c42bd05a146100bc575b600080fd5b61006461005f3660046103da565b6100e3565b005b610064610074366004610379565b6100f0565b6100a07f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b6100a07f000000000000000000000000000000000000000000000000000000000000000081565b6100ed33826100f0565b50565b806101345760405162461bcd60e51b815260206004820152600f60248201526e134e934e96915493d7d05353d55395608a1b60448201526064015b60405180910390fd5b6101607f000000000000000000000000000000000000000000000000000000000000000083308461021d565b6101ac5760405162461bcd60e51b815260206004820152601860248201527f4d3a4d3a5452414e534645525f46524f4d5f4641494c45440000000000000000604482015260640161012b565b6101d77f00000000000000000000000000000000000000000000000000000000000000008383610294565b6102195760405162461bcd60e51b8152602060048201526013602482015272134e934e9514905394d1915497d19052531151606a1b604482015260640161012b565b5050565b6040516001600160a01b038085166024830152831660448201526064810182905260009061028b9086906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526102cf565b95945050505050565b6040516001600160a01b0383166024820152604481018290526000906102c790859063a9059cbb60e01b90606401610254565b949350505050565b60006001600160a01b0383163b6102e857506000610373565b6060836001600160a01b03168360405161030291906103f3565b6000604051808303816000865af19150503d806000811461033f576040519150601f19603f3d011682016040523d82523d6000602084013e610344565b606091505b50909250905081801561036f57508051158061036f57508080602001905181019061036f91906103b1565b9150505b92915050565b6000806040838503121561038c57600080fd5b82356001600160a01b03811681146103a357600080fd5b946020939093013593505050565b6000602082840312156103c357600080fd5b815180151581146103d357600080fd5b9392505050565b6000602082840312156103ec57600080fd5b5035919050565b6000825160005b8181101561041457602081860181015185830152016103fa565b81811115610423576000828501525b50919091019291505056fea2646970667358221220edf338a79736b47ea6b604c5b8ce4e9cd5f02a611803cd02eead9c138bd86e4464736f6c63430008070033",
    "sourceMap": "205:825:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;544:88;;;;;;:::i;:::-;;:::i;:::-;;638:389;;;;;;:::i;:::-;;:::i;269:33::-;;;;;;;;-1:-1:-1;;;;;1435:32:4;;;1417:51;;1405:2;1390:18;269:33:0;;;;;;;230;;;;;544:88;597:28;605:10;617:7;597;:28::i;:::-;544:88;:::o;638:389::-;713:21;705:94;;;;-1:-1:-1;;;705:94:0;;3041:2:4;705:94:0;;;3023:21:4;3080:2;3060:18;;;3053:30;-1:-1:-1;;;3099:18:4;;;3092:45;3154:18;;705:94:0;;;;;;;;;817:66;842:8;852:6;868:4;875:7;817:24;:66::i;:::-;809:103;;;;-1:-1:-1;;;809:103:0;;2340:2:4;809:103:0;;;2322:21:4;2379:2;2359:18;;;2352:30;2418:26;2398:18;;;2391:54;2462:18;;809:103:0;2138:348:4;809:103:0;930:47;951:8;961:6;969:7;930:20;:47::i;:::-;922:98;;;;-1:-1:-1;;;922:98:0;;2693:2:4;922:98:0;;;2675:21:4;2732:2;2712:18;;;2705:30;-1:-1:-1;;;2751:18:4;;;2744:49;2810:18;;922:98:0;2491:343:4;922:98:0;638:389;;:::o;534:232:2:-;681:77;;-1:-1:-1;;;;;1737:15:4;;;681:77:2;;;1719:34:4;1789:15;;1769:18;;;1762:43;1821:18;;;1814:34;;;635:13:2;;667:92;;673:6;;-1:-1:-1;;;704:32:2;1654:18:4;;681:77:2;;;;-1:-1:-1;;681:77:2;;;;;;;;;;;;;;-1:-1:-1;;;;;681:77:2;-1:-1:-1;;;;;;681:77:2;;;;;;;;;;667:5;:92::i;:::-;660:99;534:232;-1:-1:-1;;;;;534:232:2:o;326:202::-;454:66;;-1:-1:-1;;;;;2051:32:4;;454:66:2;;;2033:51:4;2100:18;;;2093:34;;;408:13:2;;440:81;;446:6;;-1:-1:-1;;;477:28:2;2006:18:4;;454:66:2;1859:274:4;440:81:2;433:88;326:202;-1:-1:-1;;;;326:202:2:o;1366:336::-;1434:13;-1:-1:-1;;;;;1463:18:2;;;1459:50;;-1:-1:-1;1504:5:2;1497:12;;1459:50;1520:23;1580:6;-1:-1:-1;;;;;1580:11:2;1592:5;1580:18;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1553:45:2;;-1:-1:-1;1553:45:2;-1:-1:-1;1553:45:2;1616:79;;;;-1:-1:-1;1629:17:2;;:31;;:65;;;1675:10;1664:30;;;;;;;;;;;;:::i;:::-;1609:86;;;1366:336;;;;;:::o;14:354:4:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;185:23;;-1:-1:-1;;;;;237:31:4;;227:42;;217:70;;283:1;280;273:12;217:70;306:5;358:2;343:18;;;;330:32;;-1:-1:-1;;;14:354:4:o;373:277::-;440:6;493:2;481:9;472:7;468:23;464:32;461:52;;;509:1;506;499:12;461:52;541:9;535:16;594:5;587:13;580:21;573:5;570:32;560:60;;616:1;613;606:12;560:60;639:5;373:277;-1:-1:-1;;;373:277:4:o;655:180::-;714:6;767:2;755:9;746:7;742:23;738:32;735:52;;;783:1;780;773:12;735:52;-1:-1:-1;806:23:4;;655:180;-1:-1:-1;655:180:4:o;840:426::-;969:3;1007:6;1001:13;1032:1;1042:129;1056:6;1053:1;1050:13;1042:129;;;1154:4;1138:14;;;1134:25;;1128:32;1115:11;;;1108:53;1071:12;1042:129;;;1189:6;1186:1;1183:13;1180:48;;;1224:1;1215:6;1210:3;1206:16;1199:27;1180:48;-1:-1:-1;1244:16:4;;;;;840:426;-1:-1:-1;;840:426:4:o",
    "linkReferences": {},
    "immutableReferences": {
      "7": [
        {
          "start": 193,
          "length": 32
        },
        {
          "start": 433,
          "length": 32
        }
      ],
      "9": [
        {
          "start": 126,
          "length": 32
        },
        {
          "start": 313,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "migrate(address,uint256)": "ad68ebf7",
    "migrate(uint256)": "454b0608",
    "newToken()": "c42bd05a",
    "oldToken()": "b31c710a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldToken_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newToken_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oldToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"modules/mplv2/modules/migrator/contracts/Migrator.sol\":\"Migrator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":contract-test-utils/=modules/withdrawal-manager/modules/contract-test-utils/contracts/\",\":ds-test/=modules/mplv2/modules/forge-std/lib/ds-test/src/\",\":erc20-helper/=modules/withdrawal-manager/modules/erc20-helper/src/\",\":erc20/=modules/erc20/\",\":forge-std/=modules/mplv2/modules/forge-std/src/\",\":globals/=modules/mplv2/modules/globals/\",\":maple-proxy-factory/=modules/withdrawal-manager/modules/maple-proxy-factory/\",\":maple-token/=modules/maple-token/contracts/\",\":migrator/=modules/mplv2/modules/migrator/modules/erc20-helper/src/\",\":mpl-migration/=modules/xMPL/modules/mpl-migration/modules/erc20-helper/src/\",\":mplv2/=modules/mplv2/contracts/\",\":non-transparent-proxy/=modules/mplv2/modules/globals/modules/non-transparent-proxy/\",\":ntp/=modules/mplv2/modules/ntp/\",\":pool-v2/=modules/pool-v2/contracts/\",\":proxy-factory/=modules/withdrawal-manager/modules/maple-proxy-factory/modules/proxy-factory/\",\":revenue-distribution-token/=modules/xMPL/modules/revenue-distribution-token/contracts/\",\":withdrawal-manager/=modules/withdrawal-manager/contracts/\",\":xMPL/=modules/xMPL/\"]},\"sources\":{\"modules/mplv2/modules/migrator/contracts/Migrator.sol\":{\"keccak256\":\"0xcdc2ed95b452b7f181bdd0b3202bd10a7075da12c57328167ac5a3ef55197bd6\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://5bcd8a33355f6315f624c8f30f14d8cec3d97e9b232239a11038b5d889a1a8a6\",\"dweb:/ipfs/QmaXK3yeeuL4GUpQGnPGQokDH5S1SWohprtMrNrGxLcBN2\"]},\"modules/mplv2/modules/migrator/contracts/interfaces/Interfaces.sol\":{\"keccak256\":\"0xfd33c4550e1f7e67dd5ca021bf6aaebf3f618f00cbb6a242c05e230a239784d5\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://c01ca6b04bcbc1485cb88780bd3590785cca11c3768dbe0287633d73012df939\",\"dweb:/ipfs/QmSaSKmV9MBqWkPwpMrW9jN9pgrrCBps6S38CB6G3kipVK\"]},\"modules/mplv2/modules/migrator/modules/erc20-helper/src/ERC20Helper.sol\":{\"keccak256\":\"0x918391b8207bc62d665a1a9b961e9ee4e5c3407b8aafcb1fff4aa2d0b075934f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9f1ba6f499c85798c0fb0c4359ee2c13c27d708863ee9ccb80abe3aa59bbcadc\",\"dweb:/ipfs/QmT2ZHVSMuc5hEDZD7EEhu5m3dgF5cMuUBc6rwjWgHRteQ\"]},\"modules/mplv2/modules/migrator/modules/erc20-helper/src/interfaces/IERC20Like.sol\":{\"keccak256\":\"0xde8c26d922034e67479add16d9d318e7779080d9b79edb249372690b3a24b01d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://993df2017058a75315160f27e1780a76ff631759deb1821b90f97e45e5ebf2f4\",\"dweb:/ipfs/QmWngnokG6A5UGztXTKwAXRHEWP1tKqmSCf7a4ZeWV4MSG\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.7+commit.e28d00a7"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldToken_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "newToken_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "migrate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "migrate"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "newToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oldToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":contract-test-utils/=modules/withdrawal-manager/modules/contract-test-utils/contracts/",
        ":ds-test/=modules/mplv2/modules/forge-std/lib/ds-test/src/",
        ":erc20-helper/=modules/withdrawal-manager/modules/erc20-helper/src/",
        ":erc20/=modules/erc20/",
        ":forge-std/=modules/mplv2/modules/forge-std/src/",
        ":globals/=modules/mplv2/modules/globals/",
        ":maple-proxy-factory/=modules/withdrawal-manager/modules/maple-proxy-factory/",
        ":maple-token/=modules/maple-token/contracts/",
        ":migrator/=modules/mplv2/modules/migrator/modules/erc20-helper/src/",
        ":mpl-migration/=modules/xMPL/modules/mpl-migration/modules/erc20-helper/src/",
        ":mplv2/=modules/mplv2/contracts/",
        ":non-transparent-proxy/=modules/mplv2/modules/globals/modules/non-transparent-proxy/",
        ":ntp/=modules/mplv2/modules/ntp/",
        ":pool-v2/=modules/pool-v2/contracts/",
        ":proxy-factory/=modules/withdrawal-manager/modules/maple-proxy-factory/modules/proxy-factory/",
        ":revenue-distribution-token/=modules/xMPL/modules/revenue-distribution-token/contracts/",
        ":withdrawal-manager/=modules/withdrawal-manager/contracts/",
        ":xMPL/=modules/xMPL/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "modules/mplv2/modules/migrator/contracts/Migrator.sol": "Migrator"
      },
      "libraries": {}
    },
    "sources": {
      "modules/mplv2/modules/migrator/contracts/Migrator.sol": {
        "keccak256": "0xcdc2ed95b452b7f181bdd0b3202bd10a7075da12c57328167ac5a3ef55197bd6",
        "urls": [
          "bzz-raw://5bcd8a33355f6315f624c8f30f14d8cec3d97e9b232239a11038b5d889a1a8a6",
          "dweb:/ipfs/QmaXK3yeeuL4GUpQGnPGQokDH5S1SWohprtMrNrGxLcBN2"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "modules/mplv2/modules/migrator/contracts/interfaces/Interfaces.sol": {
        "keccak256": "0xfd33c4550e1f7e67dd5ca021bf6aaebf3f618f00cbb6a242c05e230a239784d5",
        "urls": [
          "bzz-raw://c01ca6b04bcbc1485cb88780bd3590785cca11c3768dbe0287633d73012df939",
          "dweb:/ipfs/QmSaSKmV9MBqWkPwpMrW9jN9pgrrCBps6S38CB6G3kipVK"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "modules/mplv2/modules/migrator/modules/erc20-helper/src/ERC20Helper.sol": {
        "keccak256": "0x918391b8207bc62d665a1a9b961e9ee4e5c3407b8aafcb1fff4aa2d0b075934f",
        "urls": [
          "bzz-raw://9f1ba6f499c85798c0fb0c4359ee2c13c27d708863ee9ccb80abe3aa59bbcadc",
          "dweb:/ipfs/QmT2ZHVSMuc5hEDZD7EEhu5m3dgF5cMuUBc6rwjWgHRteQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "modules/mplv2/modules/migrator/modules/erc20-helper/src/interfaces/IERC20Like.sol": {
        "keccak256": "0xde8c26d922034e67479add16d9d318e7779080d9b79edb249372690b3a24b01d",
        "urls": [
          "bzz-raw://993df2017058a75315160f27e1780a76ff631759deb1821b90f97e45e5ebf2f4",
          "dweb:/ipfs/QmWngnokG6A5UGztXTKwAXRHEWP1tKqmSCf7a4ZeWV4MSG"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "modules/mplv2/modules/migrator/contracts/Migrator.sol",
    "id": 96,
    "exportedSymbols": {
      "ERC20Helper": [263],
      "IERC20Like": [103],
      "Migrator": [95]
    },
    "nodeType": "SourceUnit",
    "src": "46:985:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "46:22:0",
        "nodes": [],
        "literals": ["solidity", "0.8", ".7"]
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "70:74:0",
        "nodes": [],
        "absolutePath": "modules/mplv2/modules/migrator/modules/erc20-helper/src/ERC20Helper.sol",
        "file": "../modules/erc20-helper/src/ERC20Helper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 96,
        "sourceUnit": 264,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "ERC20Helper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "79:11:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5,
        "nodeType": "ImportDirective",
        "src": "146:57:0",
        "nodes": [],
        "absolutePath": "modules/mplv2/modules/migrator/contracts/interfaces/Interfaces.sol",
        "file": "./interfaces/Interfaces.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 96,
        "sourceUnit": 104,
        "symbolAliases": [
          {
            "foreign": {
              "id": 4,
              "name": "IERC20Like",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "155:10:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 95,
        "nodeType": "ContractDefinition",
        "src": "205:825:0",
        "nodes": [
          {
            "id": 7,
            "nodeType": "VariableDeclaration",
            "src": "230:33:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "c42bd05a",
            "mutability": "immutable",
            "name": "newToken",
            "nameLocation": "255:8:0",
            "scope": 95,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "230:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 9,
            "nodeType": "VariableDeclaration",
            "src": "269:33:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "b31c710a",
            "mutability": "immutable",
            "name": "oldToken",
            "nameLocation": "294:8:0",
            "scope": 95,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "269:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40,
            "nodeType": "FunctionDefinition",
            "src": "309:229:0",
            "nodes": [],
            "body": {
              "id": 39,
              "nodeType": "Block",
              "src": "359:179:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 27,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 18,
                                  "name": "newToken_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "388:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 17,
                                "name": "IERC20Like",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 103,
                                "src": "377:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Like_$103_$",
                                  "typeString": "type(contract IERC20Like)"
                                }
                              },
                              "id": 19,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "377:21:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Like_$103",
                                "typeString": "contract IERC20Like"
                              }
                            },
                            "id": 20,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "decimals",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 102,
                            "src": "377:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                              "typeString": "function () view external returns (uint8)"
                            }
                          },
                          "id": 21,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "377:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 23,
                                  "name": "oldToken_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11,
                                  "src": "424:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 22,
                                "name": "IERC20Like",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 103,
                                "src": "413:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Like_$103_$",
                                  "typeString": "type(contract IERC20Like)"
                                }
                              },
                              "id": 24,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "413:21:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Like_$103",
                                "typeString": "contract IERC20Like"
                              }
                            },
                            "id": 25,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "decimals",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 102,
                            "src": "413:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                              "typeString": "function () view external returns (uint8)"
                            }
                          },
                          "id": 26,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "413:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "377:68:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d3a433a444543494d414c5f4d49534d41544348",
                        "id": 28,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "447:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d533f79bfc06129ef4e0dff16c58df43a7d695e29a0eb1b99cbea9ddb7551da0",
                          "typeString": "literal_string \"M:C:DECIMAL_MISMATCH\""
                        },
                        "value": "M:C:DECIMAL_MISMATCH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d533f79bfc06129ef4e0dff16c58df43a7d695e29a0eb1b99cbea9ddb7551da0",
                          "typeString": "literal_string \"M:C:DECIMAL_MISMATCH\""
                        }
                      ],
                      "id": 16,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "369:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "369:101:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30,
                  "nodeType": "ExpressionStatement",
                  "src": "369:101:0"
                },
                {
                  "expression": {
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31,
                      "name": "oldToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "481:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 32,
                      "name": "oldToken_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "492:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "481:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "481:20:0"
                },
                {
                  "expression": {
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35,
                      "name": "newToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "511:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 36,
                      "name": "newToken_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "522:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "511:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "511:20:0"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11,
                  "mutability": "mutable",
                  "name": "oldToken_",
                  "nameLocation": "329:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "321:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "321:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13,
                  "mutability": "mutable",
                  "name": "newToken_",
                  "nameLocation": "348:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "340:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "340:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "320:38:0"
            },
            "returnParameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "359:0:0"
            },
            "scope": 95,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 52,
            "nodeType": "FunctionDefinition",
            "src": "544:88:0",
            "nodes": [],
            "body": {
              "id": 51,
              "nodeType": "Block",
              "src": "587:45:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "605:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "605:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "617:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45,
                      "name": "migrate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "597:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "597:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "597:28:0"
                }
              ]
            },
            "functionSelector": "454b0608",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "migrate",
            "nameLocation": "553:7:0",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "569:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "561:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "561:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "560:17:0"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "587:0:0"
            },
            "scope": 95,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 94,
            "nodeType": "FunctionDefinition",
            "src": "638:389:0",
            "nodes": [],
            "body": {
              "id": 93,
              "nodeType": "Block",
              "src": "695:332:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 60,
                          "name": "amount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "713:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 63,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "732:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 62,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "724:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 61,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "724:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "724:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "713:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d3a4d3a5a45524f5f414d4f554e54",
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "781:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0058812910d24f42049a10365997cf4ac8f1c0fe07501ccb6098853b061de2c",
                          "typeString": "literal_string \"M:M:ZERO_AMOUNT\""
                        },
                        "value": "M:M:ZERO_AMOUNT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0058812910d24f42049a10365997cf4ac8f1c0fe07501ccb6098853b061de2c",
                          "typeString": "literal_string \"M:M:ZERO_AMOUNT\""
                        }
                      ],
                      "id": 59,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "705:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "705:94:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "705:94:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 72,
                            "name": "oldToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "842:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 73,
                            "name": "owner_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "852:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 76,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "868:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Migrator_$95",
                                  "typeString": "contract Migrator"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Migrator_$95",
                                  "typeString": "contract Migrator"
                                }
                              ],
                              "id": 75,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "860:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 74,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "860:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 77,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "860:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 78,
                            "name": "amount_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "875:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 70,
                            "name": "ERC20Helper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "817:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20Helper_$263_$",
                              "typeString": "type(library ERC20Helper)"
                            }
                          },
                          "id": 71,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 159,
                          "src": "817:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,address,uint256) returns (bool)"
                          }
                        },
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "817:66:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d3a4d3a5452414e534645525f46524f4d5f4641494c4544",
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "885:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78f599d272a8f10b6a8ca1070b3f27a56b7b4cb94b4eee41c31209df361a55a9",
                          "typeString": "literal_string \"M:M:TRANSFER_FROM_FAILED\""
                        },
                        "value": "M:M:TRANSFER_FROM_FAILED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_78f599d272a8f10b6a8ca1070b3f27a56b7b4cb94b4eee41c31209df361a55a9",
                          "typeString": "literal_string \"M:M:TRANSFER_FROM_FAILED\""
                        }
                      ],
                      "id": 69,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "809:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "809:103:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "809:103:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86,
                            "name": "newToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "951:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 87,
                            "name": "owner_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "961:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 88,
                            "name": "amount_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "969:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 84,
                            "name": "ERC20Helper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "930:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20Helper_$263_$",
                              "typeString": "type(library ERC20Helper)"
                            }
                          },
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 132,
                          "src": "930:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) returns (bool)"
                          }
                        },
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "930:47:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d3a4d3a5452414e534645525f4641494c4544",
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "998:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2f2c7a885c0ffc59925bcf0165e143f5a22f11afe058614609aedf9455f92d6",
                          "typeString": "literal_string \"M:M:TRANSFER_FAILED\""
                        },
                        "value": "M:M:TRANSFER_FAILED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2f2c7a885c0ffc59925bcf0165e143f5a22f11afe058614609aedf9455f92d6",
                          "typeString": "literal_string \"M:M:TRANSFER_FAILED\""
                        }
                      ],
                      "id": 83,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "922:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "922:98:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "922:98:0"
                }
              ]
            },
            "functionSelector": "ad68ebf7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "migrate",
            "nameLocation": "647:7:0",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "663:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "655:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "679:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "671:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "671:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "654:33:0"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "695:0:0"
            },
            "scope": 95,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [95],
        "name": "Migrator",
        "nameLocation": "214:8:0",
        "scope": 96,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0-or-later"
  },
  "id": 0
}
