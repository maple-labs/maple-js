/**
 *  Run against bundle generated by maple-deploy
 */

require('dotenv').config()

const project = process.env.PROJECT || 'mainnet'

const getAddress = (contract) => {
  try {
    const path = `../artifacts/${project}/addresses/${contract}.address.js`
    return require(path)
  } catch (e) {
    return '0x0000000000000000000000000000000000000000'
  }
}

const build = () => {
  const addresses = {
    AAVE: getAddress('AAVE'),
    AccountingChecker: getAddress('AccountingChecker'),
    BFactory: getAddress('BFactory'),
    BPool: getAddress('BPool'),
    BPoolWETH: getAddress('BPoolWETH'),
    CollateralLockerFactory: getAddress('CollateralLockerFactory'),
    DAI: getAddress('DAI'),
    DeactivationOracle: getAddress('DeactivationOracle'),
    DebtLockerFactory: getAddress('DebtLockerFactory'),
    DebtLockerV2: getAddress('DebtLockerV2'),
    DebtLockerV2Factory: getAddress('DebtLockerV2Factory'),
    DebtLockerV2Initializer: getAddress('DebtLockerV2Initializer'),
    DebtLockerV3: getAddress('DebtLockerV3'),
    DebtLockerV3Initializer: getAddress('DebtLockerV3Initializer'),
    DebtLockerV4: getAddress('DebtLockerV4'),
    DebtLockerV4Initializer: getAddress('DebtLockerV4Initializer'),
    DebtLockerV4Migrator: getAddress('DebtLockerV4Migrator'),
    FeeManager: getAddress('FeeManager'),
    FixedTermLoanManager: getAddress('FixedTermLoanManager'),
    FixedTermLoanManagerFactory: getAddress('FixedTermLoanManagerFactory'),
    FixedTermLoanManagerInitializer: getAddress('FixedTermLoanManagerInitializer'),
    FundingLockerFactory: getAddress('FundingLockerFactory'),
    LINK: getAddress('LINK'),
    LateFeeCalc: getAddress('LateFeeCalc'),
    LiquidatorFactory: getAddress('LiquidatorFactory'),
    Liquidator: getAddress('Liquidator'),
    LiquidatorInitializer: getAddress('LiquidatorInitializer'),
    LiquidityLockerFactory: getAddress('LiquidityLockerFactory'),
    LoanFactory: getAddress('LoanFactory'),
    LoanLib: getAddress('LoanLib'),
    LoanManager: getAddress('LoanManager'),
    LoanManagerFactory: getAddress('LoanManagerFactory'),
    LoanManagerInitializer: getAddress('LoanManagerInitializer'),
    LoanV2: getAddress('LoanV2'),
    LoanV2Factory: getAddress('LoanV2Factory'),
    LoanV2Initializer: getAddress('LoanV2Initializer'),
    LoanV2Refinancer: getAddress('LoanV2Refinancer'),
    LoanV3: getAddress('LoanV3'),
    LoanV3Initializer: getAddress('LoanV3Initializer'),
    LoanV3Refinancer: getAddress('LoanV3Refinancer'),
    LoanV301: getAddress('LoanV301'),
    LoanV301Initializer: getAddress('LoanV301Initializer'),
    LoanV301Refinancer: getAddress('LoanV301Refinancer'),
    LoanV302: getAddress('LoanV302'),
    LoanV4: getAddress('LoanV4'),
    LoanV4Initializer: getAddress('LoanV4Initializer'),
    LoanV4Migrator: getAddress('LoanV4Migrator'),
    LoanV4Refinancer: getAddress('LoanV4Refinancer'),
    LoanV401: getAddress('LoanV401'),
    LoanV5: getAddress('LoanV5'),
    LoanV5Initializer: getAddress('LoanV5Initializer'),
    LoanV5Refinancer: getAddress('LoanV5Refinancer'),
    MapleGlobals: getAddress('MapleGlobals'),
    MapleGlobalsV2: getAddress('MapleGlobalsV2'),
    MapleToken: getAddress('MapleToken'),
    MapleTreasury: getAddress('MapleTreasury'),
    MigrationHelper: getAddress('MigrationHelper'),
    MigrationHelperProxy: getAddress('MigrationHelperProxy'),
    MplRewardsFactory: getAddress('MplRewardsFactory'),
    NonTransparentProxy: getAddress('NonTransparentProxy'),
    OpenTermLoan: getAddress('OpenTermLoan'),
    OpenTermLoanFactory: getAddress('OpenTermLoanFactory'),
    OpenTermLoanInitializer: getAddress('OpenTermLoanInitializer'),
    OpenTermLoanManager: getAddress('OpenTermLoanManager'),
    OpenTermLoanManagerFactory: getAddress('OpenTermLoanManagerFactory'),
    OpenTermLoanManagerInitializer: getAddress('OpenTermLoanManagerInitializer'),
    PoolDeployer: getAddress('PoolDeployer'),
    PoolV1Factory: getAddress('PoolV1Factory'),
    PoolV1Lib: getAddress('PoolV1Lib'),
    PoolManager: getAddress('PoolManager'),
    PoolManagerFactory: getAddress('PoolManagerFactory'),
    PoolManagerInitializer: getAddress('PoolManagerInitializer'),
    PoolManagerV2: getAddress('PoolManagerV2'),
    PremiumCalc: getAddress('PremiumCalc'),
    PriceOracleAAVE: getAddress('PriceOracleAAVE'),
    PriceOracleLINK: getAddress('PriceOracleLINK'),
    PriceOracleUSDC: getAddress('PriceOracleUSDC'),
    PriceOracleWBTC: getAddress('PriceOracleWBTC'),
    PriceOracleWETH: getAddress('PriceOracleWETH'),
    RepaymentCalc: getAddress('RepaymentCalc'),
    StakeLockerFactory: getAddress('StakeLockerFactory'),
    TransitionLoanManager: getAddress('TransitionLoanManager'),
    USDC: getAddress('USDC'),
    UniswapV2Router02: getAddress('UniswapV2Router02'),
    Util: getAddress('Util'),
    WBTC: getAddress('WBTC'),
    WETH9: getAddress('WETH9'),
    WithdrawalManager: getAddress('WithdrawalManager'),
    WithdrawalManagerFactory: getAddress('WithdrawalManagerFactory'),
    WithdrawalManagerInitializer: getAddress('WithdrawalManagerInitializer'),
    xMPL: getAddress('xMPL'),
    manifest: require(`../artifacts/${project}/manifest.json`)
  }
  return addresses
}

try {
  console.log(build(process.argv[2]))
} catch (err) {
  console.log(err)
}
